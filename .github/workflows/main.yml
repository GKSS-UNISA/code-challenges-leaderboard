name: "Continuous Deployment"

on:
  push:
    branches:
      - trunk

permissions:
  contents: read

jobs:
  lint:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        with:
          fetch-depth: 1

      - name: Set up Node.js
        uses: actions/setup-node@v4
        with:
          node-version-file: .nvmrc
          cache: "npm"

      - name: Install dependencies
        run: npm ci

      - name: Run lint
        run: npm run lint

  test:
    runs-on: ubuntu-latest
    container: node:20-bookworm-slim
    env:
      DATABASE_URL: postgresql://postgres:postgres@postgres:5432/postgres
      BETTER_AUTH_SECRET_KEY: test_auth_secret_key
      BETTER_AUTH_URL: http://localhost:3000
      BETTER_AUTH_COOKIE_NAME: test.session_token
      API_KEY_HEADER_NAME: Authorization
      POINTS_INCREMENT: 5
    services:
      postgres:
        image: postgres:15-alpine
        env:
          POSTGRES_PASSWORD: postgres
          POSTGRES_USER: postgres
          POSTGRES_DB: postgres
        ports:
          - 5432:5432
        options: >-
          --health-cmd pg_isready
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        with:
          fetch-depth: 1
      - name: Set up Node.js
        uses: actions/setup-node@v4
        with:
          node-version-file: .nvmrc
          cache: "npm"

      - name: Install dependencies
        run: npm ci

      - name: Run migrations
        run: npm run migrate:deploy

      - name: Run tests
        run: npm test -- run

  deploy:
    runs-on: ubuntu-latest
    needs:
      - lint
      - test
    permissions:
      deployments: write
    env:
      DATABASE_URL: ${{ secrets.DATABASE_URL }}
      VERCEL_ORG_ID: ${{ secrets.VERCEL_ORG_ID }}
      VERCEL_PROJECT_ID: ${{ secrets.VERCEL_PROJECT_ID }}
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        with:
          fetch-depth: 1

      - name: Set up Node.js
        uses: actions/setup-node@v4
        with:
          node-version-file: .nvmrc
          cache: "npm"

      - name: Install dependencies
        run: npm ci

      - name: Install global dependencies
        run: npm i -g vercel@latest

      - name: Pull Vercel environment information
        run: vercel pull --yes --environment=production --token=${{ secrets.VERCEL_ACTIONS_ACCESS_TOKEN }}

      - name: Build  project artifacts
        run: vercel build --prod --token=${{ secrets.VERCEL_ACTIONS_ACCESS_TOKEN }}

      - name: Deploy project artifacts
        run: |
          npm run migrate:deploy
          vercel deploy --prebuilt --prod --token=${{ secrets.VERCEL_ACTIONS_ACCESS_TOKEN }}
